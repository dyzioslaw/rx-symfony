<?php

namespace Warsztaty\FilterBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductsCombinationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductsCombinationRepository extends EntityRepository
{
    public function getProductsByCombinationsParams(array $params)
    {
        // extend (tmp solution :-P)
        $params = array(
            'surface' => array(25),
            'technology' => array(18),
            'jons' => array(2),
            'warmfog' => array(1),
            'higro' => array(1)
        );

        // Helpers
        $relationMap = array();
        $attributeMap = $this->getEntityManager()
            ->getRepository('WarsztatyFilterBundle:Attributes')
            ->getAttributeMap();


        // Quick validation
        foreach (array('surface', 'technology', 'jons', 'warmfog', 'higro') as $key)
        {
            if (!array_key_exists($key, $params) OR !array_key_exists($key, $attributeMap)) {
                return false;
            }

            if ($params[$key])
            {
                foreach ($params[$key] as $id_value)
                {
                    $relation = $this->getEntityManager()
                        ->getRepository('WarsztatyFilterBundle:AttributeRelation')
                        ->findOneBy(array(
                            'idAttribute' => $attributeMap[$key],
                            'idValue' => $id_value
                    ));

                    if (!$relation) {
                        return false;
                    }

                    $relationMap['by_key'][$key][] = $relation->getIdRelation();
                    $relationMap['id_list'][] = $relation->getIdRelation();
                }
            }
        }

        if ($relationMap) {
            return $this->findByRelationIds($relationMap['id_list']);
        }

        return false;
    }

    /**
     * @param array $relation_ids
     * @return array
     */
    public function findByRelationIds(array $relation_ids)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('p')
            ->from('WarsztatyFilterBundle:ProductsCombination', 'pc')
            ->join('WarsztatyFilterBundle:Products', 'p', 'WITH', 'p.idProduct=pc.idProduct')
            ->add('where', $this->getEntityManager()->getExpressionBuilder()->in('pc.idRelation', $relation_ids))
            ->where('p.isAvailable = 1')
            ->getQuery()
            ->getArrayResult();
    }
}
